@use './../plugin/tabbyjs/sass/tabby-ui.scss';
@import url('https://fonts.googleapis.com/css2?family=Amita:wght@400;700&family=Architects+Daughter&family=Annie+Use+Your+Telescope&family=Shadows+Into+Light&display=swap');

@tailwind base;
@tailwind components;

* {
    box-sizing: border-box;
    @apply p-0 m-0;
}

html, body {
    height: 100%;
}

::selection {
    @apply text-white bg-gray-700;
}

.center-x {
    left: 50%;
    transform: translateX(-50%);
}

@mixin center-x($position: absolute) {
    @if $position != static or $position != relative {
        position: $position;
        left: 50%;
        transform: translateX(-50%);
    }
    @else {

    }
}

.box-promo {

    &__heading, &__subheading {
        @apply max-w-full overflow-hidden;
        text-overflow: ellipsis;
        font-family: 'Amita', cursive;
    }
}

.btn {
    @apply font-bold p-2 text-white rounded transition duration-150 transform 
    flex items-center outline-none border-b-4;

    &:active {
        @apply translate-y-1 border-b-2;
    }

    &-outline {
        @extend .btn;
        @apply border;
    }

    box-icon #icon {
        fill: red;
    }

}

:disabled {
    @apply opacity-50 cursor-not-allowed;
}

.w-full-2x {
    width: 200%;
}

.section {
    &__heading {

        span {
            position: relative;

            &::after {
                content: '';
                @apply bg-black w-3/5;
                bottom: -30px;
                height: 2px;
                @include center-x;
            }
        }
    }
}


.card-product {
    max-width: 100%;
}
.font-architects {
    font-family: 'Architects Daughter', cursive;
}
.font-shadows-light {
    font-family: 'Shadows Into Light', cursive;
}

.required-input {
    
    span {
        @apply relative pr-3;
        
        &::after {
            content: '*';
            top: 50%;
            transform: translateY(-50%);
            @apply absolute right-0 text-red-400;
        }
    }
}

//mixin
@mixin sameSize($size) {
    width: $size;
    height: $size;
}

@mixin openNav($depthParent: 1) {
    $rootString: #{&};
    $parentIndex: str-index($rootString, " ");
    $parent: str_slice($rootString, 0, $parentIndex - $depthParent);
    $children: str_slice($rootString, $parentIndex);

    @at-root #{$parent}.nav--open #{$children} {
        @content;
    }
}
